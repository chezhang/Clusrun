// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/clusrun.proto

package clusrun

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeState int32

const (
	NodeState_Unknown NodeState = 0
	NodeState_Ready   NodeState = 1
	NodeState_Error   NodeState = 2
	NodeState_Lost    NodeState = 3
)

var NodeState_name = map[int32]string{
	0: "Unknown",
	1: "Ready",
	2: "Error",
	3: "Lost",
}

var NodeState_value = map[string]int32{
	"Unknown": 0,
	"Ready":   1,
	"Error":   2,
	"Lost":    3,
}

func (x NodeState) String() string {
	return proto.EnumName(NodeState_name, int32(x))
}

func (NodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{0}
}

type JobState int32

const (
	JobState_Created      JobState = 0
	JobState_Dispatching  JobState = 1
	JobState_Running      JobState = 2
	JobState_Canceling    JobState = 3
	JobState_Finished     JobState = 4
	JobState_Failed       JobState = 5
	JobState_Canceled     JobState = 6
	JobState_CancelFailed JobState = 7
)

var JobState_name = map[int32]string{
	0: "Created",
	1: "Dispatching",
	2: "Running",
	3: "Canceling",
	4: "Finished",
	5: "Failed",
	6: "Canceled",
	7: "CancelFailed",
}

var JobState_value = map[string]int32{
	"Created":      0,
	"Dispatching":  1,
	"Running":      2,
	"Canceling":    3,
	"Finished":     4,
	"Failed":       5,
	"Canceled":     6,
	"CancelFailed": 7,
}

func (x JobState) String() string {
	return proto.EnumName(JobState_name, int32(x))
}

func (JobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{1}
}

type SetHeadnodesMode int32

const (
	SetHeadnodesMode_Default SetHeadnodesMode = 0
	SetHeadnodesMode_Add     SetHeadnodesMode = 1
	SetHeadnodesMode_Remove  SetHeadnodesMode = 2
)

var SetHeadnodesMode_name = map[int32]string{
	0: "Default",
	1: "Add",
	2: "Remove",
}

var SetHeadnodesMode_value = map[string]int32{
	"Default": 0,
	"Add":     1,
	"Remove":  2,
}

func (x SetHeadnodesMode) String() string {
	return proto.EnumName(SetHeadnodesMode_name, int32(x))
}

func (SetHeadnodesMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{2}
}

type HeartbeatRequest struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{0}
}

func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

func (m *HeartbeatRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GetNodesRequest struct {
	Pattern              string    `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Groups               []string  `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	State                NodeState `protobuf:"varint,3,opt,name=state,proto3,enum=clusrun.NodeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNodesRequest) Reset()         { *m = GetNodesRequest{} }
func (m *GetNodesRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodesRequest) ProtoMessage()    {}
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{2}
}

func (m *GetNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodesRequest.Unmarshal(m, b)
}
func (m *GetNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodesRequest.Marshal(b, m, deterministic)
}
func (m *GetNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodesRequest.Merge(m, src)
}
func (m *GetNodesRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodesRequest.Size(m)
}
func (m *GetNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodesRequest proto.InternalMessageInfo

func (m *GetNodesRequest) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *GetNodesRequest) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *GetNodesRequest) GetState() NodeState {
	if m != nil {
		return m.State
	}
	return NodeState_Unknown
}

type GetNodesReply struct {
	Nodes                []*GetNodesReply_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetNodesReply) Reset()         { *m = GetNodesReply{} }
func (m *GetNodesReply) String() string { return proto.CompactTextString(m) }
func (*GetNodesReply) ProtoMessage()    {}
func (*GetNodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{3}
}

func (m *GetNodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodesReply.Unmarshal(m, b)
}
func (m *GetNodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodesReply.Marshal(b, m, deterministic)
}
func (m *GetNodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodesReply.Merge(m, src)
}
func (m *GetNodesReply) XXX_Size() int {
	return xxx_messageInfo_GetNodesReply.Size(m)
}
func (m *GetNodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodesReply proto.InternalMessageInfo

func (m *GetNodesReply) GetNodes() []*GetNodesReply_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetNodesReply_Node struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State                NodeState `protobuf:"varint,2,opt,name=state,proto3,enum=clusrun.NodeState" json:"state,omitempty"`
	Jobs                 []int32   `protobuf:"varint,3,rep,packed,name=jobs,proto3" json:"jobs,omitempty"`
	Groups               []string  `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetNodesReply_Node) Reset()         { *m = GetNodesReply_Node{} }
func (m *GetNodesReply_Node) String() string { return proto.CompactTextString(m) }
func (*GetNodesReply_Node) ProtoMessage()    {}
func (*GetNodesReply_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{3, 0}
}

func (m *GetNodesReply_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodesReply_Node.Unmarshal(m, b)
}
func (m *GetNodesReply_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodesReply_Node.Marshal(b, m, deterministic)
}
func (m *GetNodesReply_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodesReply_Node.Merge(m, src)
}
func (m *GetNodesReply_Node) XXX_Size() int {
	return xxx_messageInfo_GetNodesReply_Node.Size(m)
}
func (m *GetNodesReply_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodesReply_Node.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodesReply_Node proto.InternalMessageInfo

func (m *GetNodesReply_Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNodesReply_Node) GetState() NodeState {
	if m != nil {
		return m.State
	}
	return NodeState_Unknown
}

func (m *GetNodesReply_Node) GetJobs() []int32 {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *GetNodesReply_Node) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

type GetJobsRequest struct {
	JobIds               map[int32]bool `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetJobsRequest) Reset()         { *m = GetJobsRequest{} }
func (m *GetJobsRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobsRequest) ProtoMessage()    {}
func (*GetJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{4}
}

func (m *GetJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobsRequest.Unmarshal(m, b)
}
func (m *GetJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobsRequest.Marshal(b, m, deterministic)
}
func (m *GetJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobsRequest.Merge(m, src)
}
func (m *GetJobsRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobsRequest.Size(m)
}
func (m *GetJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobsRequest proto.InternalMessageInfo

func (m *GetJobsRequest) GetJobIds() map[int32]bool {
	if m != nil {
		return m.JobIds
	}
	return nil
}

type Job struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Command              string           `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Serial               string           `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	Nodes                []string         `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	CreateTime           int64            `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	EndTime              int64            `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                JobState         `protobuf:"varint,7,opt,name=state,proto3,enum=clusrun.JobState" json:"state,omitempty"`
	FailedNodes          map[string]int32 `protobuf:"bytes,8,rep,name=failed_nodes,json=failedNodes,proto3" json:"failed_nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CancelFailedNodes    []string         `protobuf:"bytes,9,rep,name=cancel_failed_nodes,json=cancelFailedNodes,proto3" json:"cancel_failed_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{5}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Job) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Job) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *Job) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Job) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Job) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Job) GetState() JobState {
	if m != nil {
		return m.State
	}
	return JobState_Created
}

func (m *Job) GetFailedNodes() map[string]int32 {
	if m != nil {
		return m.FailedNodes
	}
	return nil
}

func (m *Job) GetCancelFailedNodes() []string {
	if m != nil {
		return m.CancelFailedNodes
	}
	return nil
}

type GetJobsReply struct {
	Jobs                 []*Job   `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobsReply) Reset()         { *m = GetJobsReply{} }
func (m *GetJobsReply) String() string { return proto.CompactTextString(m) }
func (*GetJobsReply) ProtoMessage()    {}
func (*GetJobsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{6}
}

func (m *GetJobsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobsReply.Unmarshal(m, b)
}
func (m *GetJobsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobsReply.Marshal(b, m, deterministic)
}
func (m *GetJobsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobsReply.Merge(m, src)
}
func (m *GetJobsReply) XXX_Size() int {
	return xxx_messageInfo_GetJobsReply.Size(m)
}
func (m *GetJobsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobsReply proto.InternalMessageInfo

func (m *GetJobsReply) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type GetOutputRequest struct {
	JobId                int32    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutputRequest) Reset()         { *m = GetOutputRequest{} }
func (m *GetOutputRequest) String() string { return proto.CompactTextString(m) }
func (*GetOutputRequest) ProtoMessage()    {}
func (*GetOutputRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{7}
}

func (m *GetOutputRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutputRequest.Unmarshal(m, b)
}
func (m *GetOutputRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutputRequest.Marshal(b, m, deterministic)
}
func (m *GetOutputRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutputRequest.Merge(m, src)
}
func (m *GetOutputRequest) XXX_Size() int {
	return xxx_messageInfo_GetOutputRequest.Size(m)
}
func (m *GetOutputRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutputRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutputRequest proto.InternalMessageInfo

func (m *GetOutputRequest) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *GetOutputRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type GetOutputReply struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Stdout               string   `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               string   `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutputReply) Reset()         { *m = GetOutputReply{} }
func (m *GetOutputReply) String() string { return proto.CompactTextString(m) }
func (*GetOutputReply) ProtoMessage()    {}
func (*GetOutputReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{8}
}

func (m *GetOutputReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutputReply.Unmarshal(m, b)
}
func (m *GetOutputReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutputReply.Marshal(b, m, deterministic)
}
func (m *GetOutputReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutputReply.Merge(m, src)
}
func (m *GetOutputReply) XXX_Size() int {
	return xxx_messageInfo_GetOutputReply.Size(m)
}
func (m *GetOutputReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutputReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutputReply proto.InternalMessageInfo

func (m *GetOutputReply) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *GetOutputReply) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *GetOutputReply) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

type StartClusJobRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pattern              string   `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Group                string   `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Serial               string   `protobuf:"bytes,5,opt,name=serial,proto3" json:"serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartClusJobRequest) Reset()         { *m = StartClusJobRequest{} }
func (m *StartClusJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartClusJobRequest) ProtoMessage()    {}
func (*StartClusJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{9}
}

func (m *StartClusJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartClusJobRequest.Unmarshal(m, b)
}
func (m *StartClusJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartClusJobRequest.Marshal(b, m, deterministic)
}
func (m *StartClusJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartClusJobRequest.Merge(m, src)
}
func (m *StartClusJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartClusJobRequest.Size(m)
}
func (m *StartClusJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartClusJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartClusJobRequest proto.InternalMessageInfo

func (m *StartClusJobRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *StartClusJobRequest) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *StartClusJobRequest) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *StartClusJobRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *StartClusJobRequest) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

type StartClusJobReply struct {
	JobId                int32    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Nodes                []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Node                 string   `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	Stdout               string   `protobuf:"bytes,4,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               string   `protobuf:"bytes,5,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode             int32    `protobuf:"zigzag32,6,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartClusJobReply) Reset()         { *m = StartClusJobReply{} }
func (m *StartClusJobReply) String() string { return proto.CompactTextString(m) }
func (*StartClusJobReply) ProtoMessage()    {}
func (*StartClusJobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{10}
}

func (m *StartClusJobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartClusJobReply.Unmarshal(m, b)
}
func (m *StartClusJobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartClusJobReply.Marshal(b, m, deterministic)
}
func (m *StartClusJobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartClusJobReply.Merge(m, src)
}
func (m *StartClusJobReply) XXX_Size() int {
	return xxx_messageInfo_StartClusJobReply.Size(m)
}
func (m *StartClusJobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartClusJobReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartClusJobReply proto.InternalMessageInfo

func (m *StartClusJobReply) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *StartClusJobReply) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *StartClusJobReply) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *StartClusJobReply) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *StartClusJobReply) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *StartClusJobReply) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

type CancelClusJobsRequest struct {
	JobIds               map[int32]bool `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CancelClusJobsRequest) Reset()         { *m = CancelClusJobsRequest{} }
func (m *CancelClusJobsRequest) String() string { return proto.CompactTextString(m) }
func (*CancelClusJobsRequest) ProtoMessage()    {}
func (*CancelClusJobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{11}
}

func (m *CancelClusJobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelClusJobsRequest.Unmarshal(m, b)
}
func (m *CancelClusJobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelClusJobsRequest.Marshal(b, m, deterministic)
}
func (m *CancelClusJobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelClusJobsRequest.Merge(m, src)
}
func (m *CancelClusJobsRequest) XXX_Size() int {
	return xxx_messageInfo_CancelClusJobsRequest.Size(m)
}
func (m *CancelClusJobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelClusJobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelClusJobsRequest proto.InternalMessageInfo

func (m *CancelClusJobsRequest) GetJobIds() map[int32]bool {
	if m != nil {
		return m.JobIds
	}
	return nil
}

type CancelClusJobsReply struct {
	Result               map[int32]JobState `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=clusrun.JobState"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CancelClusJobsReply) Reset()         { *m = CancelClusJobsReply{} }
func (m *CancelClusJobsReply) String() string { return proto.CompactTextString(m) }
func (*CancelClusJobsReply) ProtoMessage()    {}
func (*CancelClusJobsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{12}
}

func (m *CancelClusJobsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelClusJobsReply.Unmarshal(m, b)
}
func (m *CancelClusJobsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelClusJobsReply.Marshal(b, m, deterministic)
}
func (m *CancelClusJobsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelClusJobsReply.Merge(m, src)
}
func (m *CancelClusJobsReply) XXX_Size() int {
	return xxx_messageInfo_CancelClusJobsReply.Size(m)
}
func (m *CancelClusJobsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelClusJobsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CancelClusJobsReply proto.InternalMessageInfo

func (m *CancelClusJobsReply) GetResult() map[int32]JobState {
	if m != nil {
		return m.Result
	}
	return nil
}

type StartJobRequest struct {
	Headnode             string   `protobuf:"bytes,1,opt,name=headnode,proto3" json:"headnode,omitempty"`
	JobId                int32    `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartJobRequest) Reset()         { *m = StartJobRequest{} }
func (m *StartJobRequest) String() string { return proto.CompactTextString(m) }
func (*StartJobRequest) ProtoMessage()    {}
func (*StartJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{13}
}

func (m *StartJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobRequest.Unmarshal(m, b)
}
func (m *StartJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobRequest.Marshal(b, m, deterministic)
}
func (m *StartJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobRequest.Merge(m, src)
}
func (m *StartJobRequest) XXX_Size() int {
	return xxx_messageInfo_StartJobRequest.Size(m)
}
func (m *StartJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobRequest proto.InternalMessageInfo

func (m *StartJobRequest) GetHeadnode() string {
	if m != nil {
		return m.Headnode
	}
	return ""
}

func (m *StartJobRequest) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *StartJobRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type StartJobReply struct {
	Stdout               string   `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               string   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode             int32    `protobuf:"zigzag32,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartJobReply) Reset()         { *m = StartJobReply{} }
func (m *StartJobReply) String() string { return proto.CompactTextString(m) }
func (*StartJobReply) ProtoMessage()    {}
func (*StartJobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{14}
}

func (m *StartJobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobReply.Unmarshal(m, b)
}
func (m *StartJobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobReply.Marshal(b, m, deterministic)
}
func (m *StartJobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobReply.Merge(m, src)
}
func (m *StartJobReply) XXX_Size() int {
	return xxx_messageInfo_StartJobReply.Size(m)
}
func (m *StartJobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobReply proto.InternalMessageInfo

func (m *StartJobReply) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *StartJobReply) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *StartJobReply) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

type CancelJobRequest struct {
	Headnode             string   `protobuf:"bytes,1,opt,name=headnode,proto3" json:"headnode,omitempty"`
	JobId                int32    `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelJobRequest) Reset()         { *m = CancelJobRequest{} }
func (m *CancelJobRequest) String() string { return proto.CompactTextString(m) }
func (*CancelJobRequest) ProtoMessage()    {}
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{15}
}

func (m *CancelJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelJobRequest.Unmarshal(m, b)
}
func (m *CancelJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelJobRequest.Marshal(b, m, deterministic)
}
func (m *CancelJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelJobRequest.Merge(m, src)
}
func (m *CancelJobRequest) XXX_Size() int {
	return xxx_messageInfo_CancelJobRequest.Size(m)
}
func (m *CancelJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelJobRequest proto.InternalMessageInfo

func (m *CancelJobRequest) GetHeadnode() string {
	if m != nil {
		return m.Headnode
	}
	return ""
}

func (m *CancelJobRequest) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *CancelJobRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type ValidateRequest struct {
	Headnode             string   `protobuf:"bytes,1,opt,name=headnode,proto3" json:"headnode,omitempty"`
	Clusnode             string   `protobuf:"bytes,2,opt,name=clusnode,proto3" json:"clusnode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{16}
}

func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(m, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetHeadnode() string {
	if m != nil {
		return m.Headnode
	}
	return ""
}

func (m *ValidateRequest) GetClusnode() string {
	if m != nil {
		return m.Clusnode
	}
	return ""
}

type ValidateReply struct {
	Nodename             string   `protobuf:"bytes,1,opt,name=nodename,proto3" json:"nodename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateReply) Reset()         { *m = ValidateReply{} }
func (m *ValidateReply) String() string { return proto.CompactTextString(m) }
func (*ValidateReply) ProtoMessage()    {}
func (*ValidateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{17}
}

func (m *ValidateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateReply.Unmarshal(m, b)
}
func (m *ValidateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateReply.Marshal(b, m, deterministic)
}
func (m *ValidateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateReply.Merge(m, src)
}
func (m *ValidateReply) XXX_Size() int {
	return xxx_messageInfo_ValidateReply.Size(m)
}
func (m *ValidateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateReply proto.InternalMessageInfo

func (m *ValidateReply) GetNodename() string {
	if m != nil {
		return m.Nodename
	}
	return ""
}

type SetHeadnodesRequest struct {
	Headnodes            []string         `protobuf:"bytes,1,rep,name=headnodes,proto3" json:"headnodes,omitempty"`
	Mode                 SetHeadnodesMode `protobuf:"varint,2,opt,name=mode,proto3,enum=clusrun.SetHeadnodesMode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetHeadnodesRequest) Reset()         { *m = SetHeadnodesRequest{} }
func (m *SetHeadnodesRequest) String() string { return proto.CompactTextString(m) }
func (*SetHeadnodesRequest) ProtoMessage()    {}
func (*SetHeadnodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{18}
}

func (m *SetHeadnodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetHeadnodesRequest.Unmarshal(m, b)
}
func (m *SetHeadnodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetHeadnodesRequest.Marshal(b, m, deterministic)
}
func (m *SetHeadnodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetHeadnodesRequest.Merge(m, src)
}
func (m *SetHeadnodesRequest) XXX_Size() int {
	return xxx_messageInfo_SetHeadnodesRequest.Size(m)
}
func (m *SetHeadnodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetHeadnodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetHeadnodesRequest proto.InternalMessageInfo

func (m *SetHeadnodesRequest) GetHeadnodes() []string {
	if m != nil {
		return m.Headnodes
	}
	return nil
}

func (m *SetHeadnodesRequest) GetMode() SetHeadnodesMode {
	if m != nil {
		return m.Mode
	}
	return SetHeadnodesMode_Default
}

type SetHeadnodesReply struct {
	Results              map[string]string `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetHeadnodesReply) Reset()         { *m = SetHeadnodesReply{} }
func (m *SetHeadnodesReply) String() string { return proto.CompactTextString(m) }
func (*SetHeadnodesReply) ProtoMessage()    {}
func (*SetHeadnodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{19}
}

func (m *SetHeadnodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetHeadnodesReply.Unmarshal(m, b)
}
func (m *SetHeadnodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetHeadnodesReply.Marshal(b, m, deterministic)
}
func (m *SetHeadnodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetHeadnodesReply.Merge(m, src)
}
func (m *SetHeadnodesReply) XXX_Size() int {
	return xxx_messageInfo_SetHeadnodesReply.Size(m)
}
func (m *SetHeadnodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetHeadnodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetHeadnodesReply proto.InternalMessageInfo

func (m *SetHeadnodesReply) GetResults() map[string]string {
	if m != nil {
		return m.Results
	}
	return nil
}

type SetConfigsRequest struct {
	Configs              map[string]string `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetConfigsRequest) Reset()         { *m = SetConfigsRequest{} }
func (m *SetConfigsRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigsRequest) ProtoMessage()    {}
func (*SetConfigsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{20}
}

func (m *SetConfigsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigsRequest.Unmarshal(m, b)
}
func (m *SetConfigsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigsRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigsRequest.Merge(m, src)
}
func (m *SetConfigsRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigsRequest.Size(m)
}
func (m *SetConfigsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigsRequest proto.InternalMessageInfo

func (m *SetConfigsRequest) GetConfigs() map[string]string {
	if m != nil {
		return m.Configs
	}
	return nil
}

type SetConfigsReply struct {
	Results              map[string]string `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetConfigsReply) Reset()         { *m = SetConfigsReply{} }
func (m *SetConfigsReply) String() string { return proto.CompactTextString(m) }
func (*SetConfigsReply) ProtoMessage()    {}
func (*SetConfigsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{21}
}

func (m *SetConfigsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigsReply.Unmarshal(m, b)
}
func (m *SetConfigsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigsReply.Marshal(b, m, deterministic)
}
func (m *SetConfigsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigsReply.Merge(m, src)
}
func (m *SetConfigsReply) XXX_Size() int {
	return xxx_messageInfo_SetConfigsReply.Size(m)
}
func (m *SetConfigsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigsReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigsReply proto.InternalMessageInfo

func (m *SetConfigsReply) GetResults() map[string]string {
	if m != nil {
		return m.Results
	}
	return nil
}

type GetConfigsReply struct {
	Configs              map[string]string `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetConfigsReply) Reset()         { *m = GetConfigsReply{} }
func (m *GetConfigsReply) String() string { return proto.CompactTextString(m) }
func (*GetConfigsReply) ProtoMessage()    {}
func (*GetConfigsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a8110e89f4086ed, []int{22}
}

func (m *GetConfigsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigsReply.Unmarshal(m, b)
}
func (m *GetConfigsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigsReply.Marshal(b, m, deterministic)
}
func (m *GetConfigsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigsReply.Merge(m, src)
}
func (m *GetConfigsReply) XXX_Size() int {
	return xxx_messageInfo_GetConfigsReply.Size(m)
}
func (m *GetConfigsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigsReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigsReply proto.InternalMessageInfo

func (m *GetConfigsReply) GetConfigs() map[string]string {
	if m != nil {
		return m.Configs
	}
	return nil
}

func init() {
	proto.RegisterEnum("clusrun.NodeState", NodeState_name, NodeState_value)
	proto.RegisterEnum("clusrun.JobState", JobState_name, JobState_value)
	proto.RegisterEnum("clusrun.SetHeadnodesMode", SetHeadnodesMode_name, SetHeadnodesMode_value)
	proto.RegisterType((*HeartbeatRequest)(nil), "clusrun.HeartbeatRequest")
	proto.RegisterType((*Empty)(nil), "clusrun.Empty")
	proto.RegisterType((*GetNodesRequest)(nil), "clusrun.GetNodesRequest")
	proto.RegisterType((*GetNodesReply)(nil), "clusrun.GetNodesReply")
	proto.RegisterType((*GetNodesReply_Node)(nil), "clusrun.GetNodesReply.Node")
	proto.RegisterType((*GetJobsRequest)(nil), "clusrun.GetJobsRequest")
	proto.RegisterMapType((map[int32]bool)(nil), "clusrun.GetJobsRequest.JobIdsEntry")
	proto.RegisterType((*Job)(nil), "clusrun.Job")
	proto.RegisterMapType((map[string]int32)(nil), "clusrun.Job.FailedNodesEntry")
	proto.RegisterType((*GetJobsReply)(nil), "clusrun.GetJobsReply")
	proto.RegisterType((*GetOutputRequest)(nil), "clusrun.GetOutputRequest")
	proto.RegisterType((*GetOutputReply)(nil), "clusrun.GetOutputReply")
	proto.RegisterType((*StartClusJobRequest)(nil), "clusrun.StartClusJobRequest")
	proto.RegisterType((*StartClusJobReply)(nil), "clusrun.StartClusJobReply")
	proto.RegisterType((*CancelClusJobsRequest)(nil), "clusrun.CancelClusJobsRequest")
	proto.RegisterMapType((map[int32]bool)(nil), "clusrun.CancelClusJobsRequest.JobIdsEntry")
	proto.RegisterType((*CancelClusJobsReply)(nil), "clusrun.CancelClusJobsReply")
	proto.RegisterMapType((map[int32]JobState)(nil), "clusrun.CancelClusJobsReply.ResultEntry")
	proto.RegisterType((*StartJobRequest)(nil), "clusrun.StartJobRequest")
	proto.RegisterType((*StartJobReply)(nil), "clusrun.StartJobReply")
	proto.RegisterType((*CancelJobRequest)(nil), "clusrun.CancelJobRequest")
	proto.RegisterType((*ValidateRequest)(nil), "clusrun.ValidateRequest")
	proto.RegisterType((*ValidateReply)(nil), "clusrun.ValidateReply")
	proto.RegisterType((*SetHeadnodesRequest)(nil), "clusrun.SetHeadnodesRequest")
	proto.RegisterType((*SetHeadnodesReply)(nil), "clusrun.SetHeadnodesReply")
	proto.RegisterMapType((map[string]string)(nil), "clusrun.SetHeadnodesReply.ResultsEntry")
	proto.RegisterType((*SetConfigsRequest)(nil), "clusrun.SetConfigsRequest")
	proto.RegisterMapType((map[string]string)(nil), "clusrun.SetConfigsRequest.ConfigsEntry")
	proto.RegisterType((*SetConfigsReply)(nil), "clusrun.SetConfigsReply")
	proto.RegisterMapType((map[string]string)(nil), "clusrun.SetConfigsReply.ResultsEntry")
	proto.RegisterType((*GetConfigsReply)(nil), "clusrun.GetConfigsReply")
	proto.RegisterMapType((map[string]string)(nil), "clusrun.GetConfigsReply.ConfigsEntry")
}

func init() { proto.RegisterFile("protobuf/clusrun.proto", fileDescriptor_1a8110e89f4086ed) }

var fileDescriptor_1a8110e89f4086ed = []byte{
	// 1327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xcd, 0x73, 0xdb, 0x44,
	0x14, 0xb7, 0x24, 0xcb, 0x96, 0x9e, 0x1d, 0x47, 0xd9, 0xf4, 0x43, 0x55, 0x0b, 0x78, 0xc4, 0x74,
	0xe2, 0x09, 0x83, 0x29, 0x81, 0x43, 0x28, 0x50, 0x12, 0x9c, 0x34, 0x6d, 0x26, 0x7c, 0x8c, 0x52,
	0xb8, 0xc0, 0x90, 0x91, 0xad, 0x75, 0xa2, 0xd4, 0x96, 0x8c, 0xb4, 0x2a, 0xe4, 0xc2, 0x9d, 0x03,
	0x1c, 0x7a, 0xe1, 0xcc, 0x01, 0xfe, 0x02, 0xfe, 0x34, 0xfe, 0x00, 0x66, 0x77, 0xf5, 0xb1, 0x52,
	0xe4, 0x14, 0x86, 0x32, 0xdc, 0xf4, 0xf6, 0xe3, 0xed, 0x6f, 0x7f, 0xef, 0xf7, 0xf6, 0x3d, 0xc1,
	0x8d, 0x45, 0x14, 0x92, 0x70, 0x9c, 0x4c, 0xdf, 0x9a, 0xcc, 0x92, 0x38, 0x4a, 0x82, 0x21, 0x1b,
	0x40, 0xed, 0xd4, 0xb4, 0x3f, 0x06, 0xe3, 0x11, 0x76, 0x23, 0x32, 0xc6, 0x2e, 0x71, 0xf0, 0xb7,
	0x09, 0x8e, 0x09, 0xb2, 0x40, 0x0b, 0x42, 0x0f, 0x07, 0xee, 0x1c, 0x9b, 0x52, 0x5f, 0x1a, 0xe8,
	0x4e, 0x6e, 0x23, 0x04, 0xcd, 0xb3, 0x30, 0x26, 0xa6, 0xcc, 0xc6, 0xd9, 0xb7, 0xdd, 0x06, 0x75,
	0x7f, 0xbe, 0x20, 0x17, 0xf6, 0x1c, 0x56, 0x0f, 0x30, 0xf9, 0x34, 0xf4, 0x70, 0x9c, 0xf9, 0x32,
	0xa1, 0xbd, 0x70, 0x09, 0xc1, 0x51, 0x90, 0xba, 0xca, 0x4c, 0x74, 0x03, 0x5a, 0xa7, 0x51, 0x98,
	0x2c, 0x62, 0x53, 0xee, 0x2b, 0x03, 0xdd, 0x49, 0x2d, 0x34, 0x00, 0x35, 0x26, 0x2e, 0xc1, 0xa6,
	0xd2, 0x97, 0x06, 0xbd, 0x2d, 0x34, 0xcc, 0x90, 0x53, 0xbf, 0xc7, 0x74, 0xc6, 0xe1, 0x0b, 0xec,
	0x3f, 0x24, 0x58, 0x29, 0xce, 0x5b, 0xcc, 0x2e, 0xd0, 0xdb, 0xa0, 0x52, 0xa4, 0xb1, 0x29, 0xf5,
	0x95, 0x41, 0x67, 0xeb, 0x76, 0xbe, 0xb7, 0xb4, 0x8c, 0x79, 0x72, 0xf8, 0x4a, 0x6b, 0x01, 0x4d,
	0x6a, 0xd2, 0x8b, 0x09, 0x17, 0x66, 0xdf, 0x05, 0x14, 0xf9, 0x05, 0x50, 0xe8, 0xee, 0xf3, 0x70,
	0x1c, 0x9b, 0x4a, 0x5f, 0x19, 0xa8, 0x0e, 0xfb, 0x16, 0x2e, 0xd8, 0x14, 0x2f, 0x68, 0xff, 0x28,
	0x41, 0xef, 0x00, 0x93, 0xc3, 0x70, 0x9c, 0xb3, 0xf4, 0x01, 0xb4, 0xcf, 0xc3, 0xf1, 0x89, 0xef,
	0x65, 0xc8, 0x5f, 0x17, 0x91, 0x0b, 0x2b, 0x87, 0x87, 0xe1, 0xf8, 0xb1, 0x17, 0xef, 0x07, 0x24,
	0xba, 0x70, 0x5a, 0xe7, 0xcc, 0xb0, 0xde, 0x83, 0x8e, 0x30, 0x8c, 0x0c, 0x50, 0x9e, 0xe2, 0x0b,
	0x76, 0x11, 0xd5, 0xa1, 0x9f, 0xe8, 0x1a, 0xa8, 0xcf, 0xdc, 0x59, 0xc2, 0xef, 0xa1, 0x39, 0xdc,
	0xb8, 0x2f, 0x6f, 0x4b, 0xf6, 0x9f, 0x32, 0x28, 0x87, 0xe1, 0x18, 0xf5, 0x40, 0xf6, 0xbd, 0x74,
	0x8b, 0xec, 0x7b, 0x34, 0x6c, 0x93, 0x70, 0x3e, 0x77, 0x03, 0x2f, 0x8d, 0x74, 0x66, 0xd2, 0x5b,
	0xc5, 0x38, 0xf2, 0xdd, 0x19, 0x8b, 0x8f, 0xee, 0xa4, 0x16, 0x3d, 0x83, 0x53, 0xcf, 0x2f, 0xcb,
	0x0d, 0xf4, 0x1a, 0x74, 0x26, 0x11, 0x76, 0x09, 0x3e, 0x21, 0xfe, 0x1c, 0x9b, 0x6a, 0x5f, 0x1a,
	0x28, 0x0e, 0xf0, 0xa1, 0x27, 0xfe, 0x1c, 0xa3, 0x5b, 0xa0, 0xe1, 0xc0, 0xe3, 0xb3, 0x2d, 0x36,
	0xdb, 0xc6, 0x81, 0xc7, 0xa6, 0x36, 0x32, 0xf6, 0xdb, 0x8c, 0xfd, 0xb5, 0x9c, 0x92, 0xc3, 0x70,
	0x5c, 0x22, 0x7f, 0x07, 0xba, 0x53, 0xd7, 0x9f, 0x61, 0xef, 0x84, 0x23, 0xd0, 0x18, 0x85, 0xaf,
	0x88, 0xeb, 0x87, 0x0f, 0xd9, 0x02, 0xa6, 0x01, 0x4e, 0x5e, 0x67, 0x5a, 0x8c, 0xa0, 0x21, 0xac,
	0x4f, 0xdc, 0x60, 0x82, 0x67, 0x27, 0x25, 0x47, 0x3a, 0xbb, 0xca, 0x1a, 0x9f, 0x12, 0x3c, 0x58,
	0x0f, 0xc0, 0xa8, 0x3a, 0x14, 0x69, 0xd7, 0x6b, 0x68, 0x57, 0x45, 0xda, 0xef, 0x41, 0x37, 0x8f,
	0x2b, 0xd5, 0x6d, 0x3f, 0x95, 0x0f, 0x0f, 0x7e, 0x57, 0x44, 0xce, 0xc5, 0x64, 0x7f, 0x08, 0xc6,
	0x01, 0x26, 0x9f, 0x25, 0x64, 0x91, 0xe4, 0x79, 0x7a, 0x1d, 0x5a, 0x5c, 0x35, 0x69, 0xe0, 0x54,
	0xa6, 0x07, 0xa6, 0xe4, 0xd0, 0xc3, 0x59, 0x8a, 0xd2, 0x6f, 0xfb, 0x09, 0x93, 0x5c, 0xb6, 0x9d,
	0x1e, 0x99, 0xad, 0x92, 0x8a, 0x55, 0x2c, 0xb6, 0xc4, 0x0b, 0x93, 0x2c, 0xbd, 0x53, 0x2b, 0x1d,
	0xc7, 0x51, 0x94, 0xc7, 0x9c, 0x59, 0xf6, 0x4f, 0x12, 0xac, 0x1f, 0x13, 0x37, 0x22, 0xa3, 0x59,
	0x12, 0x53, 0xac, 0x45, 0xd2, 0x67, 0xea, 0x91, 0xca, 0xea, 0xc9, 0x55, 0x22, 0x8b, 0x2a, 0x11,
	0x1e, 0x09, 0xa5, 0xfc, 0x48, 0x5c, 0x03, 0x95, 0x65, 0x8d, 0xd9, 0x64, 0xe3, 0xdc, 0x10, 0x34,
	0xa8, 0x8a, 0x1a, 0xb4, 0x7f, 0x95, 0x60, 0xad, 0x8c, 0x87, 0xde, 0x74, 0x09, 0x4d, 0xf5, 0x50,
	0x32, 0x5a, 0x94, 0x5a, 0x5a, 0x9a, 0x4b, 0x68, 0x51, 0x45, 0x5a, 0xd0, 0x6d, 0xd0, 0xf1, 0xf7,
	0x3e, 0x39, 0x99, 0x50, 0x47, 0x54, 0xd4, 0x6b, 0x8e, 0x46, 0x07, 0x46, 0x34, 0x12, 0xbf, 0x48,
	0x70, 0x7d, 0xc4, 0x04, 0x95, 0x82, 0xcc, 0x1f, 0x81, 0x51, 0xf5, 0x11, 0xd8, 0xcc, 0x75, 0x50,
	0xbb, 0xe1, 0x65, 0xbf, 0x05, 0xbf, 0x49, 0xb0, 0x5e, 0x3d, 0x88, 0xf2, 0xb7, 0x03, 0xad, 0x08,
	0xc7, 0xc9, 0x8c, 0xa4, 0xb0, 0x06, 0x4b, 0x61, 0xd1, 0xb7, 0xd5, 0x61, 0x4b, 0x53, 0x50, 0x7c,
	0x9f, 0x75, 0x04, 0x1d, 0x61, 0xb8, 0x06, 0xd4, 0x86, 0x08, 0xaa, 0x3e, 0xd5, 0x0b, 0x9c, 0xdf,
	0xc0, 0x2a, 0x0b, 0xb2, 0x20, 0x38, 0x0b, 0xb4, 0x33, 0xec, 0x7a, 0x82, 0xa0, 0x73, 0x5b, 0x08,
	0xbf, 0x2c, 0x86, 0x5f, 0xd0, 0xa8, 0x52, 0xd2, 0xa8, 0xfd, 0x35, 0xac, 0x14, 0xfe, 0x29, 0x01,
	0x45, 0xfc, 0xa5, 0x25, 0xf1, 0x97, 0x97, 0xc7, 0x5f, 0xa9, 0xc4, 0xff, 0x2b, 0x30, 0x38, 0x6d,
	0xff, 0x0e, 0xfe, 0x35, 0x50, 0xa7, 0x61, 0x34, 0xe1, 0xfe, 0x35, 0x87, 0x1b, 0xf6, 0x63, 0x58,
	0xfd, 0xd2, 0x9d, 0xf9, 0x1e, 0x65, 0xec, 0x6f, 0xf8, 0xb6, 0x40, 0xa3, 0x44, 0x0b, 0xaf, 0x45,
	0x6e, 0xdb, 0x6f, 0xc0, 0x4a, 0xe1, 0x8a, 0xb2, 0x70, 0x45, 0x57, 0x60, 0x8f, 0x61, 0xfd, 0x18,
	0x93, 0x47, 0xa9, 0xdf, 0x5c, 0xd1, 0x77, 0x40, 0xcf, 0xce, 0xe2, 0x9a, 0xd6, 0x9d, 0x62, 0x00,
	0xbd, 0x09, 0xcd, 0x79, 0x76, 0x72, 0x6f, 0xeb, 0x56, 0x1e, 0x73, 0xd1, 0xd3, 0x27, 0xb4, 0x52,
	0xb3, 0x65, 0xf6, 0x73, 0x9a, 0xdc, 0xa5, 0x43, 0x28, 0xaa, 0x5d, 0x68, 0x73, 0x91, 0x65, 0x49,
	0xb3, 0x51, 0xeb, 0x47, 0xd4, 0x66, 0x9a, 0x31, 0xd9, 0x3e, 0xeb, 0x3e, 0x74, 0xc5, 0x89, 0x17,
	0x3d, 0xe4, 0xba, 0xa8, 0xc5, 0x14, 0xd4, 0x28, 0x0c, 0xa6, 0xfe, 0x69, 0x7e, 0xef, 0x5d, 0xaa,
	0x2d, 0x36, 0x52, 0x07, 0xaa, 0xbc, 0x78, 0x98, 0x9a, 0x29, 0xa8, 0x74, 0x1f, 0x05, 0x25, 0x4e,
	0xfc, 0x23, 0x50, 0x3f, 0x4b, 0xb0, 0x2a, 0x9e, 0x43, 0x79, 0xfa, 0xa8, 0xca, 0xd3, 0xdd, 0x5a,
	0x48, 0xff, 0x0d, 0x4b, 0x14, 0xd0, 0xc1, 0x65, 0x40, 0x65, 0x8e, 0xee, 0x8a, 0x2d, 0x4f, 0x09,
	0xd0, 0x4b, 0x67, 0x68, 0x73, 0x1b, 0xf4, 0xbc, 0x85, 0x43, 0x1d, 0x68, 0x7f, 0x11, 0x3c, 0x0d,
	0xc2, 0xef, 0x02, 0xa3, 0x81, 0x74, 0x50, 0x1d, 0xec, 0x7a, 0x17, 0x86, 0x44, 0x3f, 0xf7, 0xa3,
	0x28, 0x8c, 0x0c, 0x19, 0x69, 0xd0, 0x3c, 0x0a, 0x63, 0x62, 0x28, 0x9b, 0x3f, 0x80, 0x96, 0xbd,
	0x49, 0x74, 0xe3, 0x88, 0x75, 0x32, 0x9e, 0xd1, 0x40, 0xab, 0xd0, 0xd9, 0xf3, 0xe3, 0x85, 0x4b,
	0x26, 0x67, 0x7e, 0x70, 0x6a, 0x48, 0x74, 0xd6, 0x49, 0x82, 0x80, 0x1a, 0x32, 0x5a, 0x01, 0x9d,
	0x67, 0x3d, 0x35, 0x15, 0xd4, 0x05, 0xed, 0xa1, 0x1f, 0xf8, 0xf1, 0x19, 0xf6, 0x8c, 0x26, 0x02,
	0x68, 0xf1, 0x6e, 0xc2, 0x50, 0xe9, 0x0c, 0x5f, 0x88, 0x3d, 0xa3, 0x85, 0x0c, 0xe8, 0x8e, 0x84,
	0xe6, 0xc3, 0x68, 0x6f, 0xbe, 0x0b, 0x46, 0x35, 0x3f, 0xe8, 0x49, 0x7b, 0x78, 0xea, 0x26, 0x33,
	0x62, 0x34, 0x50, 0x1b, 0x94, 0x5d, 0xcf, 0x33, 0x24, 0xea, 0xd5, 0xc1, 0xf3, 0xf0, 0x19, 0x36,
	0xe4, 0xad, 0xdf, 0x9b, 0xa0, 0x65, 0x7b, 0xd0, 0x36, 0xe8, 0x79, 0xcb, 0x8f, 0x8a, 0xb4, 0xab,
	0xfe, 0x06, 0x58, 0xbd, 0x7c, 0x8a, 0x77, 0xf7, 0x0d, 0xf4, 0x00, 0xb4, 0xac, 0x91, 0x46, 0x66,
	0x4d, 0x6f, 0xcd, 0xf7, 0xdd, 0xa8, 0xef, 0xba, 0xed, 0x06, 0x7a, 0x1f, 0xda, 0x69, 0xdb, 0x83,
	0x6e, 0x2e, 0x69, 0x70, 0xad, 0xeb, 0x97, 0x27, 0xf8, 0xe6, 0x11, 0xe8, 0x79, 0x0b, 0x23, 0xc0,
	0xae, 0x76, 0x45, 0xd6, 0xcd, 0xba, 0x29, 0xe6, 0xe2, 0x9e, 0x84, 0x8e, 0xa0, 0x2b, 0x36, 0x08,
	0xe8, 0x4e, 0x91, 0x05, 0x97, 0xfb, 0x18, 0xcb, 0x5a, 0x32, 0x9b, 0x79, 0xfb, 0x1c, 0x7a, 0xe5,
	0x12, 0x88, 0x5e, 0xbd, 0xba, 0x64, 0x5b, 0x77, 0xae, 0xaa, 0x9d, 0x76, 0x03, 0xed, 0x01, 0x14,
	0xe9, 0x88, 0xac, 0xe5, 0xcf, 0x86, 0x65, 0x2e, 0xcb, 0x5f, 0xbb, 0x81, 0xb6, 0x01, 0x8a, 0x1c,
	0x42, 0x95, 0x38, 0x5a, 0xe6, 0xb2, 0x44, 0xb3, 0x1b, 0x5b, 0xcf, 0x15, 0xd0, 0x46, 0x69, 0x09,
	0x40, 0x3b, 0xa0, 0x65, 0x85, 0x50, 0x08, 0x77, 0xa5, 0xf6, 0x0a, 0xe1, 0x2e, 0x55, 0x4d, 0x46,
	0xd0, 0x76, 0x26, 0x7b, 0xea, 0xe2, 0x56, 0xe5, 0xee, 0x82, 0x8f, 0x5a, 0xa9, 0x65, 0xe5, 0x47,
	0x38, 0xbb, 0x52, 0xdc, 0x84, 0xb3, 0x4b, 0xb5, 0xca, 0x6e, 0xa0, 0x43, 0xe8, 0x8a, 0x79, 0x22,
	0x06, 0xfa, 0x72, 0xa1, 0xb2, 0xac, 0xe5, 0x45, 0xe3, 0xff, 0x0f, 0xca, 0xb8, 0xc5, 0xfe, 0xd9,
	0xdf, 0xf9, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xae, 0xa5, 0xc1, 0xd4, 0xcd, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HeadnodeClient is the client API for Headnode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeadnodeClient interface {
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*Empty, error)
	GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (*GetNodesReply, error)
	GetJobs(ctx context.Context, in *GetJobsRequest, opts ...grpc.CallOption) (*GetJobsReply, error)
	GetOutput(ctx context.Context, in *GetOutputRequest, opts ...grpc.CallOption) (Headnode_GetOutputClient, error)
	StartClusJob(ctx context.Context, in *StartClusJobRequest, opts ...grpc.CallOption) (Headnode_StartClusJobClient, error)
	CancelClusJobs(ctx context.Context, in *CancelClusJobsRequest, opts ...grpc.CallOption) (*CancelClusJobsReply, error)
	SetConfigs(ctx context.Context, in *SetConfigsRequest, opts ...grpc.CallOption) (*SetConfigsReply, error)
	GetConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetConfigsReply, error)
}

type headnodeClient struct {
	cc *grpc.ClientConn
}

func NewHeadnodeClient(cc *grpc.ClientConn) HeadnodeClient {
	return &headnodeClient{cc}
}

func (c *headnodeClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *headnodeClient) GetNodes(ctx context.Context, in *GetNodesRequest, opts ...grpc.CallOption) (*GetNodesReply, error) {
	out := new(GetNodesReply)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/GetNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *headnodeClient) GetJobs(ctx context.Context, in *GetJobsRequest, opts ...grpc.CallOption) (*GetJobsReply, error) {
	out := new(GetJobsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/GetJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *headnodeClient) GetOutput(ctx context.Context, in *GetOutputRequest, opts ...grpc.CallOption) (Headnode_GetOutputClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Headnode_serviceDesc.Streams[0], "/clusrun.Headnode/GetOutput", opts...)
	if err != nil {
		return nil, err
	}
	x := &headnodeGetOutputClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Headnode_GetOutputClient interface {
	Recv() (*GetOutputReply, error)
	grpc.ClientStream
}

type headnodeGetOutputClient struct {
	grpc.ClientStream
}

func (x *headnodeGetOutputClient) Recv() (*GetOutputReply, error) {
	m := new(GetOutputReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *headnodeClient) StartClusJob(ctx context.Context, in *StartClusJobRequest, opts ...grpc.CallOption) (Headnode_StartClusJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Headnode_serviceDesc.Streams[1], "/clusrun.Headnode/StartClusJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &headnodeStartClusJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Headnode_StartClusJobClient interface {
	Recv() (*StartClusJobReply, error)
	grpc.ClientStream
}

type headnodeStartClusJobClient struct {
	grpc.ClientStream
}

func (x *headnodeStartClusJobClient) Recv() (*StartClusJobReply, error) {
	m := new(StartClusJobReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *headnodeClient) CancelClusJobs(ctx context.Context, in *CancelClusJobsRequest, opts ...grpc.CallOption) (*CancelClusJobsReply, error) {
	out := new(CancelClusJobsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/CancelClusJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *headnodeClient) SetConfigs(ctx context.Context, in *SetConfigsRequest, opts ...grpc.CallOption) (*SetConfigsReply, error) {
	out := new(SetConfigsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/SetConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *headnodeClient) GetConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetConfigsReply, error) {
	out := new(GetConfigsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Headnode/GetConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeadnodeServer is the server API for Headnode service.
type HeadnodeServer interface {
	Heartbeat(context.Context, *HeartbeatRequest) (*Empty, error)
	GetNodes(context.Context, *GetNodesRequest) (*GetNodesReply, error)
	GetJobs(context.Context, *GetJobsRequest) (*GetJobsReply, error)
	GetOutput(*GetOutputRequest, Headnode_GetOutputServer) error
	StartClusJob(*StartClusJobRequest, Headnode_StartClusJobServer) error
	CancelClusJobs(context.Context, *CancelClusJobsRequest) (*CancelClusJobsReply, error)
	SetConfigs(context.Context, *SetConfigsRequest) (*SetConfigsReply, error)
	GetConfigs(context.Context, *Empty) (*GetConfigsReply, error)
}

// UnimplementedHeadnodeServer can be embedded to have forward compatible implementations.
type UnimplementedHeadnodeServer struct {
}

func (*UnimplementedHeadnodeServer) Heartbeat(ctx context.Context, req *HeartbeatRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedHeadnodeServer) GetNodes(ctx context.Context, req *GetNodesRequest) (*GetNodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodes not implemented")
}
func (*UnimplementedHeadnodeServer) GetJobs(ctx context.Context, req *GetJobsRequest) (*GetJobsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobs not implemented")
}
func (*UnimplementedHeadnodeServer) GetOutput(req *GetOutputRequest, srv Headnode_GetOutputServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOutput not implemented")
}
func (*UnimplementedHeadnodeServer) StartClusJob(req *StartClusJobRequest, srv Headnode_StartClusJobServer) error {
	return status.Errorf(codes.Unimplemented, "method StartClusJob not implemented")
}
func (*UnimplementedHeadnodeServer) CancelClusJobs(ctx context.Context, req *CancelClusJobsRequest) (*CancelClusJobsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelClusJobs not implemented")
}
func (*UnimplementedHeadnodeServer) SetConfigs(ctx context.Context, req *SetConfigsRequest) (*SetConfigsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfigs not implemented")
}
func (*UnimplementedHeadnodeServer) GetConfigs(ctx context.Context, req *Empty) (*GetConfigsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigs not implemented")
}

func RegisterHeadnodeServer(s *grpc.Server, srv HeadnodeServer) {
	s.RegisterService(&_Headnode_serviceDesc, srv)
}

func _Headnode_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Headnode_GetNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).GetNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/GetNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).GetNodes(ctx, req.(*GetNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Headnode_GetJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).GetJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/GetJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).GetJobs(ctx, req.(*GetJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Headnode_GetOutput_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetOutputRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeadnodeServer).GetOutput(m, &headnodeGetOutputServer{stream})
}

type Headnode_GetOutputServer interface {
	Send(*GetOutputReply) error
	grpc.ServerStream
}

type headnodeGetOutputServer struct {
	grpc.ServerStream
}

func (x *headnodeGetOutputServer) Send(m *GetOutputReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Headnode_StartClusJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StartClusJobRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HeadnodeServer).StartClusJob(m, &headnodeStartClusJobServer{stream})
}

type Headnode_StartClusJobServer interface {
	Send(*StartClusJobReply) error
	grpc.ServerStream
}

type headnodeStartClusJobServer struct {
	grpc.ServerStream
}

func (x *headnodeStartClusJobServer) Send(m *StartClusJobReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Headnode_CancelClusJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelClusJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).CancelClusJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/CancelClusJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).CancelClusJobs(ctx, req.(*CancelClusJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Headnode_SetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).SetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/SetConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).SetConfigs(ctx, req.(*SetConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Headnode_GetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeadnodeServer).GetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Headnode/GetConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeadnodeServer).GetConfigs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Headnode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusrun.Headnode",
	HandlerType: (*HeadnodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Heartbeat",
			Handler:    _Headnode_Heartbeat_Handler,
		},
		{
			MethodName: "GetNodes",
			Handler:    _Headnode_GetNodes_Handler,
		},
		{
			MethodName: "GetJobs",
			Handler:    _Headnode_GetJobs_Handler,
		},
		{
			MethodName: "CancelClusJobs",
			Handler:    _Headnode_CancelClusJobs_Handler,
		},
		{
			MethodName: "SetConfigs",
			Handler:    _Headnode_SetConfigs_Handler,
		},
		{
			MethodName: "GetConfigs",
			Handler:    _Headnode_GetConfigs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOutput",
			Handler:       _Headnode_GetOutput_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StartClusJob",
			Handler:       _Headnode_StartClusJob_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/clusrun.proto",
}

// ClusnodeClient is the client API for Clusnode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusnodeClient interface {
	StartJob(ctx context.Context, in *StartJobRequest, opts ...grpc.CallOption) (Clusnode_StartJobClient, error)
	CancelJob(ctx context.Context, in *CancelJobRequest, opts ...grpc.CallOption) (*Empty, error)
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateReply, error)
	SetHeadnodes(ctx context.Context, in *SetHeadnodesRequest, opts ...grpc.CallOption) (*SetHeadnodesReply, error)
	SetConfigs(ctx context.Context, in *SetConfigsRequest, opts ...grpc.CallOption) (*SetConfigsReply, error)
	GetConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetConfigsReply, error)
}

type clusnodeClient struct {
	cc *grpc.ClientConn
}

func NewClusnodeClient(cc *grpc.ClientConn) ClusnodeClient {
	return &clusnodeClient{cc}
}

func (c *clusnodeClient) StartJob(ctx context.Context, in *StartJobRequest, opts ...grpc.CallOption) (Clusnode_StartJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Clusnode_serviceDesc.Streams[0], "/clusrun.Clusnode/StartJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &clusnodeStartJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Clusnode_StartJobClient interface {
	Recv() (*StartJobReply, error)
	grpc.ClientStream
}

type clusnodeStartJobClient struct {
	grpc.ClientStream
}

func (x *clusnodeStartJobClient) Recv() (*StartJobReply, error) {
	m := new(StartJobReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *clusnodeClient) CancelJob(ctx context.Context, in *CancelJobRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/clusrun.Clusnode/CancelJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusnodeClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateReply, error) {
	out := new(ValidateReply)
	err := c.cc.Invoke(ctx, "/clusrun.Clusnode/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusnodeClient) SetHeadnodes(ctx context.Context, in *SetHeadnodesRequest, opts ...grpc.CallOption) (*SetHeadnodesReply, error) {
	out := new(SetHeadnodesReply)
	err := c.cc.Invoke(ctx, "/clusrun.Clusnode/SetHeadnodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusnodeClient) SetConfigs(ctx context.Context, in *SetConfigsRequest, opts ...grpc.CallOption) (*SetConfigsReply, error) {
	out := new(SetConfigsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Clusnode/SetConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusnodeClient) GetConfigs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetConfigsReply, error) {
	out := new(GetConfigsReply)
	err := c.cc.Invoke(ctx, "/clusrun.Clusnode/GetConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusnodeServer is the server API for Clusnode service.
type ClusnodeServer interface {
	StartJob(*StartJobRequest, Clusnode_StartJobServer) error
	CancelJob(context.Context, *CancelJobRequest) (*Empty, error)
	Validate(context.Context, *ValidateRequest) (*ValidateReply, error)
	SetHeadnodes(context.Context, *SetHeadnodesRequest) (*SetHeadnodesReply, error)
	SetConfigs(context.Context, *SetConfigsRequest) (*SetConfigsReply, error)
	GetConfigs(context.Context, *Empty) (*GetConfigsReply, error)
}

// UnimplementedClusnodeServer can be embedded to have forward compatible implementations.
type UnimplementedClusnodeServer struct {
}

func (*UnimplementedClusnodeServer) StartJob(req *StartJobRequest, srv Clusnode_StartJobServer) error {
	return status.Errorf(codes.Unimplemented, "method StartJob not implemented")
}
func (*UnimplementedClusnodeServer) CancelJob(ctx context.Context, req *CancelJobRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelJob not implemented")
}
func (*UnimplementedClusnodeServer) Validate(ctx context.Context, req *ValidateRequest) (*ValidateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}
func (*UnimplementedClusnodeServer) SetHeadnodes(ctx context.Context, req *SetHeadnodesRequest) (*SetHeadnodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetHeadnodes not implemented")
}
func (*UnimplementedClusnodeServer) SetConfigs(ctx context.Context, req *SetConfigsRequest) (*SetConfigsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfigs not implemented")
}
func (*UnimplementedClusnodeServer) GetConfigs(ctx context.Context, req *Empty) (*GetConfigsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigs not implemented")
}

func RegisterClusnodeServer(s *grpc.Server, srv ClusnodeServer) {
	s.RegisterService(&_Clusnode_serviceDesc, srv)
}

func _Clusnode_StartJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StartJobRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ClusnodeServer).StartJob(m, &clusnodeStartJobServer{stream})
}

type Clusnode_StartJobServer interface {
	Send(*StartJobReply) error
	grpc.ServerStream
}

type clusnodeStartJobServer struct {
	grpc.ServerStream
}

func (x *clusnodeStartJobServer) Send(m *StartJobReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Clusnode_CancelJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusnodeServer).CancelJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Clusnode/CancelJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusnodeServer).CancelJob(ctx, req.(*CancelJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clusnode_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusnodeServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Clusnode/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusnodeServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clusnode_SetHeadnodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetHeadnodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusnodeServer).SetHeadnodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Clusnode/SetHeadnodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusnodeServer).SetHeadnodes(ctx, req.(*SetHeadnodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clusnode_SetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusnodeServer).SetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Clusnode/SetConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusnodeServer).SetConfigs(ctx, req.(*SetConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clusnode_GetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusnodeServer).GetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusrun.Clusnode/GetConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusnodeServer).GetConfigs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Clusnode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusrun.Clusnode",
	HandlerType: (*ClusnodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CancelJob",
			Handler:    _Clusnode_CancelJob_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _Clusnode_Validate_Handler,
		},
		{
			MethodName: "SetHeadnodes",
			Handler:    _Clusnode_SetHeadnodes_Handler,
		},
		{
			MethodName: "SetConfigs",
			Handler:    _Clusnode_SetConfigs_Handler,
		},
		{
			MethodName: "GetConfigs",
			Handler:    _Clusnode_GetConfigs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StartJob",
			Handler:       _Clusnode_StartJob_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/clusrun.proto",
}
